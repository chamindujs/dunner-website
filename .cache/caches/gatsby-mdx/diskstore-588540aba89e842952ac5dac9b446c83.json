{"expireTime":9007200831652824000,"key":"gatsby-mdx-entire-payload-0e14255de41b361cfb9402408f3e1bf5-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Dunner Cookbook","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":18,"offset":19},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":18,"offset":19},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dunner cookbook is a collection of Dunner recipes, which can be used as templates during initialization of Dunner in a project.","position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":128,"offset":150},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":128,"offset":150},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can initialize with these recipes as: ","position":{"start":{"line":6,"column":1,"offset":154},"end":{"line":6,"column":43,"offset":196},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":154},"end":{"line":6,"column":43,"offset":196},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"dunner init <recipe_name>","position":{"start":{"line":8,"column":1,"offset":200},"end":{"line":10,"column":4,"offset":235},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can list all available recipes from command-line as:","position":{"start":{"line":12,"column":1,"offset":239},"end":{"line":12,"column":57,"offset":295},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":239},"end":{"line":12,"column":57,"offset":295},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"dunner list-recipes","position":{"start":{"line":14,"column":1,"offset":299},"end":{"line":16,"column":4,"offset":328},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How to add your Dunner recipe to Cookbook?","position":{"start":{"line":18,"column":4,"offset":335},"end":{"line":18,"column":46,"offset":377},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":332},"end":{"line":18,"column":46,"offset":377},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Send us a Pull Request with your Dunner task file in the format of a Dunner recipe described in ","position":{"start":{"line":20,"column":1,"offset":381},"end":{"line":20,"column":97,"offset":477},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/leopardslab/dunner-cookbook#how-to-add-your-dunner-recipe","children":[{"type":"text","value":"Cookbook","position":{"start":{"line":20,"column":98,"offset":478},"end":{"line":20,"column":106,"offset":486},"indent":[]}}],"position":{"start":{"line":20,"column":97,"offset":477},"end":{"line":20,"column":185,"offset":565},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":20,"column":185,"offset":565},"end":{"line":20,"column":186,"offset":566},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":381},"end":{"line":20,"column":186,"offset":566},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Dunner Cookbook Recipes\",\"metaTitle\":\"Dunner Recipes\",\"metaDescription\":\"Dunner-Cookbook is a collection of Dunner task recipes\"}","position":{"start":{"line":23,"column":1,"offset":570},"end":{"line":23,"column":168,"offset":737},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":23,"column":168,"offset":737}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dunner Cookbook Recipes\",\n  \"metaTitle\": \"Dunner Recipes\",\n  \"metaDescription\": \"Dunner-Cookbook is a collection of Dunner task recipes\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Dunner Cookbook\"), mdx(\"p\", null, \"Dunner cookbook is a collection of Dunner recipes, which can be used as templates during initialization of Dunner in a project.\"), mdx(\"p\", null, \"You can initialize with these recipes as: \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"dunner init <recipe_name>\\n\")), mdx(\"p\", null, \"You can list all available recipes from command-line as:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"dunner list-recipes\\n\")), mdx(\"h2\", null, \"How to add your Dunner recipe to Cookbook?\"), mdx(\"p\", null, \"Send us a Pull Request with your Dunner task file in the format of a Dunner recipe described in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/leopardslab/dunner-cookbook#how-to-add-your-dunner-recipe\"\n  }), \"Cookbook\"), \".\"));\n}\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\"title\":\"Dunner Cookbook Recipes\",\"metaTitle\":\"Dunner Recipes\",\"metaDescription\":\"Dunner-Cookbook is a collection of Dunner task recipes\"}\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Dunner Cookbook`}</h1>\n    <p>{`Dunner cookbook is a collection of Dunner recipes, which can be used as templates during initialization of Dunner in a project.`}</p>\n    <p>{`You can initialize with these recipes as: `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`dunner init <recipe_name>\n`}</code></pre>\n    <p>{`You can list all available recipes from command-line as:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`dunner list-recipes\n`}</code></pre>\n    <h2>{`How to add your Dunner recipe to Cookbook?`}</h2>\n    <p>{`Send us a Pull Request with your Dunner task file in the format of a Dunner recipe described in `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/leopardslab/dunner-cookbook#how-to-add-your-dunner-recipe\"\n      }}>{`Cookbook`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;"}}